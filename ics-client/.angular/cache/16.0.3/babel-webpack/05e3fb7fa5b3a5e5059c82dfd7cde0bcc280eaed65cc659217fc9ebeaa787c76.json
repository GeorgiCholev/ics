{"ast":null,"code":"import * as lodash from \"lodash\";\nimport * as i0 from \"@angular/core\";\nclass ImageHandleService {\n  constructor() {\n    this.imagesById = {};\n    this.imagesByPage = [];\n    this.batchSize = 12;\n    this.galleryQueryParams = {};\n  }\n  setCurrentQueryParams(params) {\n    if (this.galleryQueryParams !== params) {\n      console.log(\"Is true\");\n      this.galleryQueryParams = params;\n      this.resetPageIndices();\n    }\n  }\n  resetPageIndices() {\n    this.imagesByPage = [];\n  }\n  getImagesPageFromIndex(pageNum) {\n    return this.imagesByPage[pageNum];\n  }\n  addImagesPageToIndex(pageNum, dataArr) {\n    this.imagesByPage[pageNum] = lodash.take(dataArr, this.batchSize);\n  }\n  addImageByIdToIndex(image) {\n    this.imagesById[image.id] = image;\n  }\n  getImageFromIndexById(id) {\n    return this.imagesById[id];\n  }\n}\nImageHandleService.ɵfac = function ImageHandleService_Factory(t) {\n  return new (t || ImageHandleService)();\n};\nImageHandleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImageHandleService,\n  factory: ImageHandleService.ɵfac,\n  providedIn: \"root\"\n});\nexport { ImageHandleService };","map":{"version":3,"names":["lodash","ImageHandleService","constructor","imagesById","imagesByPage","batchSize","galleryQueryParams","setCurrentQueryParams","params","console","log","resetPageIndices","getImagesPageFromIndex","pageNum","addImagesPageToIndex","dataArr","take","addImageByIdToIndex","image","id","getImageFromIndexById","factory","ɵfac","providedIn"],"sources":["/Users/georgicholev/MyDocuments/ics/ics-client/src/app/shared/image-handle.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Image} from \"./image\";\nimport * as lodash from \"lodash\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class ImageHandleService {\n\n    imagesById: { [key: string]: Image } = {};\n    imagesByPage: Image[][] = [];\n    batchSize = 12;\n    galleryQueryParams: {} = {};\n\n    setCurrentQueryParams(params: {}) {\n        if (this.galleryQueryParams !== params) {\n            console.log(\"Is true\");\n            this.galleryQueryParams = params;\n            this.resetPageIndices();\n        }\n    }\n\n    resetPageIndices() {\n        this.imagesByPage = [];\n    }\n    getImagesPageFromIndex(pageNum: number) {\n        return this.imagesByPage[pageNum];\n    }\n    addImagesPageToIndex(pageNum: number, dataArr: Image[]) {\n        this.imagesByPage[pageNum] = lodash.take(dataArr, this.batchSize);\n    }\n\n    addImageByIdToIndex(image: Image) {\n        this.imagesById[image.id] = image;\n    }\n\n    getImageFromIndexById(id: string) {\n        return this.imagesById[id];\n    }\n}"],"mappings":"AAEA,OAAO,KAAKA,MAAM,MAAM,QAAQ;;AAEhC,MAGaC,kBAAkB;EAH/BC,YAAA;IAKI,KAAAC,UAAU,GAA6B,EAAE;IACzC,KAAAC,YAAY,GAAc,EAAE;IAC5B,KAAAC,SAAS,GAAG,EAAE;IACd,KAAAC,kBAAkB,GAAO,EAAE;;EAE3BC,qBAAqBA,CAACC,MAAU;IAC5B,IAAI,IAAI,CAACF,kBAAkB,KAAKE,MAAM,EAAE;MACpCC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtB,IAAI,CAACJ,kBAAkB,GAAGE,MAAM;MAChC,IAAI,CAACG,gBAAgB,EAAE;;EAE/B;EAEAA,gBAAgBA,CAAA;IACZ,IAAI,CAACP,YAAY,GAAG,EAAE;EAC1B;EACAQ,sBAAsBA,CAACC,OAAe;IAClC,OAAO,IAAI,CAACT,YAAY,CAACS,OAAO,CAAC;EACrC;EACAC,oBAAoBA,CAACD,OAAe,EAAEE,OAAgB;IAClD,IAAI,CAACX,YAAY,CAACS,OAAO,CAAC,GAAGb,MAAM,CAACgB,IAAI,CAACD,OAAO,EAAE,IAAI,CAACV,SAAS,CAAC;EACrE;EAEAY,mBAAmBA,CAACC,KAAY;IAC5B,IAAI,CAACf,UAAU,CAACe,KAAK,CAACC,EAAE,CAAC,GAAGD,KAAK;EACrC;EAEAE,qBAAqBA,CAACD,EAAU;IAC5B,OAAO,IAAI,CAAChB,UAAU,CAACgB,EAAE,CAAC;EAC9B;;AA/BSlB,kBAAkB,C;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB,C;SAAlBA,kBAAkB;EAAAoB,OAAA,EAAlBpB,kBAAkB,CAAAqB,IAAA;EAAAC,UAAA,EAFf;AAAM;SAETtB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}