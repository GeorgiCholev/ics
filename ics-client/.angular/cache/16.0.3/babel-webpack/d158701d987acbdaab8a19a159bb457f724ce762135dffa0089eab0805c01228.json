{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { catchError, tap, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nclass DataAccessService {\n  constructor(httpClient, router) {\n    this.httpClient = httpClient;\n    this.router = router;\n    this.apiEndpoint = \"http://localhost:8080/images\";\n    this.imagesById = {};\n    this.connectionError = \"Error occurred please try again later.\";\n    this.tooManyRequests = \"Too many requests! Please try again in a minute.\";\n  }\n  addImageById(image) {\n    console.log(\"added\");\n    this.imagesById[image.id] = image;\n  }\n  getImageById(id) {\n    // let imageById = this.imagesById[id];\n    if (!this.imagesById[id]) {\n      this.router.navigate(['/']).catch(err => console.log(err));\n    }\n    return this.imagesById[id];\n  }\n  categoriseImageUrl(url) {\n    const headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\"\n    });\n    return this.httpClient.post(this.apiEndpoint, url, {\n      headers: headers\n    }).pipe(tap(data => this.addImageById(data)), catchError(this.handleError));\n  }\n  handleError(httpErrorResponse) {\n    let errorMessage = \"\";\n    if (httpErrorResponse.error instanceof ErrorEvent) {\n      errorMessage = this.connectionError;\n    } else {\n      if (httpErrorResponse.status === 429) {\n        errorMessage = this.tooManyRequests;\n      } else if (httpErrorResponse.status === 400 || httpErrorResponse.status === 503) {\n        errorMessage = httpErrorResponse.error.error;\n      }\n    }\n    console.error(errorMessage);\n    return throwError(() => errorMessage);\n  }\n}\nDataAccessService.ɵfac = function DataAccessService_Factory(t) {\n  return new (t || DataAccessService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nDataAccessService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataAccessService,\n  factory: DataAccessService.ɵfac,\n  providedIn: \"root\"\n});\nexport { DataAccessService };","map":{"version":3,"names":["HttpHeaders","catchError","tap","throwError","DataAccessService","constructor","httpClient","router","apiEndpoint","imagesById","connectionError","tooManyRequests","addImageById","image","console","log","id","getImageById","navigate","catch","err","categoriseImageUrl","url","headers","post","pipe","data","handleError","httpErrorResponse","errorMessage","error","ErrorEvent","status","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["/Users/georgicholev/MyDocuments/ics/ics-client/src/app/shared/data-access.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from \"@angular/common/http\";\nimport {UrlSubmit} from \"../url-submit/url-submit\";\nimport {catchError, Observable, tap, throwError} from \"rxjs\";\nimport {Image} from \"./image\";\nimport {ImageDetailComponent} from \"../image-detail/image-detail.component\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DataAccessService {\n\n    private apiEndpoint = \"http://localhost:8080/images\";\n\n    constructor(private httpClient: HttpClient, private router: Router) {\n    }\n\n    imagesById: { [key: string]: Image } = {};\n\n    addImageById(image: Image) {\n        console.log(\"added\");\n        this.imagesById[image.id] = image;\n    }\n\n    getImageById(id:string) {\n        // let imageById = this.imagesById[id];\n        if (!this.imagesById[id]) {\n            this.router.navigate(['/'])\n                .catch(err => console.log(err));\n        }\n        return this.imagesById[id];\n    }\n\n    categoriseImageUrl(url: string): Observable<Image> {\n        const headers = new HttpHeaders({\"Content-Type\": \"application/json\"});\n        return this.httpClient\n            .post<Image>(this.apiEndpoint, url, {headers: headers})\n            .pipe(\n                tap(data => this.addImageById(data)),\n                catchError(this.handleError)\n            );\n    }\n\n    connectionError: string = \"Error occurred please try again later.\";\n    tooManyRequests: string = \"Too many requests! Please try again in a minute.\";\n\n    private handleError(httpErrorResponse: HttpErrorResponse) {\n        let errorMessage = \"\";\n        if (httpErrorResponse.error instanceof ErrorEvent) {\n            errorMessage = this.connectionError;\n        } else {\n            if (httpErrorResponse.status === 429) {\n                errorMessage = this.tooManyRequests;\n            } else if (httpErrorResponse.status === 400 || httpErrorResponse.status === 503) {\n                errorMessage = httpErrorResponse.error.error;\n            }\n        }\n\n        console.error(errorMessage);\n        return throwError(() => errorMessage);\n    }\n}\n"],"mappings":"AACA,SAAuCA,WAAW,QAAO,sBAAsB;AAE/E,SAAQC,UAAU,EAAcC,GAAG,EAAEC,UAAU,QAAO,MAAM;;;;AAK5D,MAGaC,iBAAiB;EAI1BC,YAAoBC,UAAsB,EAAUC,MAAc;IAA9C,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAFlD,KAAAC,WAAW,GAAG,8BAA8B;IAKpD,KAAAC,UAAU,GAA6B,EAAE;IA0BzC,KAAAC,eAAe,GAAW,wCAAwC;IAClE,KAAAC,eAAe,GAAW,kDAAkD;EA7B5E;EAIAC,YAAYA,CAACC,KAAY;IACrBC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,IAAI,CAACN,UAAU,CAACI,KAAK,CAACG,EAAE,CAAC,GAAGH,KAAK;EACrC;EAEAI,YAAYA,CAACD,EAAS;IAClB;IACA,IAAI,CAAC,IAAI,CAACP,UAAU,CAACO,EAAE,CAAC,EAAE;MACtB,IAAI,CAACT,MAAM,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CACtBC,KAAK,CAACC,GAAG,IAAIN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC,CAAC;;IAEvC,OAAO,IAAI,CAACX,UAAU,CAACO,EAAE,CAAC;EAC9B;EAEAK,kBAAkBA,CAACC,GAAW;IAC1B,MAAMC,OAAO,GAAG,IAAIvB,WAAW,CAAC;MAAC,cAAc,EAAE;IAAkB,CAAC,CAAC;IACrE,OAAO,IAAI,CAACM,UAAU,CACjBkB,IAAI,CAAQ,IAAI,CAAChB,WAAW,EAAEc,GAAG,EAAE;MAACC,OAAO,EAAEA;IAAO,CAAC,CAAC,CACtDE,IAAI,CACDvB,GAAG,CAACwB,IAAI,IAAI,IAAI,CAACd,YAAY,CAACc,IAAI,CAAC,CAAC,EACpCzB,UAAU,CAAC,IAAI,CAAC0B,WAAW,CAAC,CAC/B;EACT;EAKQA,WAAWA,CAACC,iBAAoC;IACpD,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,iBAAiB,CAACE,KAAK,YAAYC,UAAU,EAAE;MAC/CF,YAAY,GAAG,IAAI,CAACnB,eAAe;KACtC,MAAM;MACH,IAAIkB,iBAAiB,CAACI,MAAM,KAAK,GAAG,EAAE;QAClCH,YAAY,GAAG,IAAI,CAAClB,eAAe;OACtC,MAAM,IAAIiB,iBAAiB,CAACI,MAAM,KAAK,GAAG,IAAIJ,iBAAiB,CAACI,MAAM,KAAK,GAAG,EAAE;QAC7EH,YAAY,GAAGD,iBAAiB,CAACE,KAAK,CAACA,KAAK;;;IAIpDhB,OAAO,CAACgB,KAAK,CAACD,YAAY,CAAC;IAC3B,OAAO1B,UAAU,CAAC,MAAM0B,YAAY,CAAC;EACzC;;AAlDSzB,iBAAiB,C;mBAAjBA,iBAAiB,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAjBlC,iBAAiB,C;SAAjBA,iBAAiB;EAAAmC,OAAA,EAAjBnC,iBAAiB,CAAAoC,IAAA;EAAAC,UAAA,EAFd;AAAM;SAETrC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}